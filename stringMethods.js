var text = "–º–æ—è —Å—Ç—Ä–æ–∫–∞";

var anotherText = '–µ—â–µ —Å—Ç—Ä–æ–∫–∞';

let str = `–æ–±—Ä–∞—Ç–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏`;

console.log(`–º–æ—è
  –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è
  —Å—Ç—Ä–æ–∫–∞`);


  'use strict';
let apples = 2;
let oranges = 3;
console.log(`${apples} + ${oranges} = ${apples + oranges}`); // 2 + 3 = 5


console.log("Bytes = " + 'ùí≥'.length ); // Bytes = 2, MATHEMATICAL SCRIPT CAPITAL X
console.log("Bytes = " + 'üòÇ'.length ); // Bytes = 2, FACE WITH TEARS OF JOY

// –∫–∞–∫ –±—É–¥—Ç–æ –≤ —Å—Ç—Ä–æ–∫–µ –¥–≤–∞ —Ä–∞–∑–Ω—ã—Ö —Å–∏–º–≤–æ–ª–∞ (–Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –æ–¥–∏–Ω)
console.log( 'ùí≥'.charCodeAt(0) + ' ' + 'ùí≥'.charCodeAt(1) ); // 55349 56499
// –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª —Å "–¥–ª–∏–Ω–Ω—ã–º" (–±–æ–ª–µ–µ 2 –±–∞–π—Ç) unicode-–∫–æ–¥–æ–º
console.log( 'ùí≥'.codePointAt(0) ); // 119987


// –ü—Ä–∞–≤–∏–ª—å–Ω–æ
console.log( String.fromCodePoint(119987) ); // ùí≥
// –ù–µ–≤–µ—Ä–Ω–æ!
console.log( String.fromCharCode(119987) ); // Ìí≥

console.log( "\u2033" ); // ‚Ä≥, —Å–∏–º–≤–æ–ª –¥–≤–æ–π–Ω–æ–≥–æ —à—Ç—Ä–∏—Ö–∞
console.log( "\u20331" ); // –î–≤–∞ —Å–∏–º–≤–æ–ª–∞: —Å–∏–º–≤–æ–ª –¥–≤–æ–π–Ω–æ–≥–æ —à—Ç—Ä–∏—Ö–∞ ‚Ä≥, –∞ –∑–∞—Ç–µ–º 1
console.log( "\u{20331}" ); // †å±, –∫–∏—Ç–∞–π—Å–∫–∏–π –∏–µ—Ä–æ–≥–ª–∏—Ñ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º

var str = "I'm a JavaScript \"programmer\" ";
console.log( str ); // I'm a JavaScript "programmer"
var str = ' —Å–∏–º–≤–æ–ª \\ ';
console.log( str ); // —Å–∏–º–≤–æ–ª \
console.log( "\a" ); // a
// –∏–¥–µ–Ω—Ç–∏—á–Ω–æ alert(  "a"  );


'use strict';

function f(strings, ...values) {
    console.log(JSON.stringify(strings));     // ["Sum of "," + "," =\n ","!"]
    console.log(JSON.stringify(strings.raw)); // ["Sum of "," + "," =\\n ","!"]
    console.log(JSON.stringify(values));      // [3,5,8]
}
let apples = 3;
let oranges = 5;
//          |  s[0] | v[0] |s[1]| v[1]  |s[2]  |      v[2]      |s[3]
let str = f`Sum of ${apples} + ${oranges} =\n ${apples + oranges}!`;

'use strict';

// str –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
function str(strings, ...values) {
  let str = "";
  for(let i=0; i<values.length; i++) {
    str += strings[i];
    str += values[i];
  }

  // –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫—É—Å–æ–∫ —Å—Ç—Ä–æ–∫–∏
  str += strings[strings.length-1];
  return str;
}

let apples = 3;
let oranges = 5;

// Sum of 3 + 5 = 8!
console.log( str`Sum of ${apples} + ${oranges} = ${apples + oranges}!`);


'use strict';

let messages = {
  "Hello, {0}!": "–ü—Ä–∏–≤–µ—Ç, {0}!"
};

function i18n(strings, ...values) {
  // –ü–æ —Ñ–æ—Ä–º–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ–ª—É—á–∏–º —à–∞–±–ª–æ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ messages
  // –ù–∞ –º–µ—Å—Ç–µ –∫–∞–∂–¥–æ–≥–æ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π –±—É–¥–µ—Ç –µ–≥–æ –Ω–æ–º–µ—Ä: {0}, {1}, ‚Ä¶
  let pattern = "";
  for(let i=0; i<values.length; i++) {
    pattern += strings[i] + '{' + i + '}';
  }
  pattern += strings[strings.length-1];
  // –¢–µ–ø–µ—Ä—å pattern = "Hello, {0}!"

  let translated = messages[pattern]; // "–ü—Ä–∏–≤–µ—Ç, {0}!"

  // –ó–∞–º–µ–Ω–∏—Ç –≤ "–ü—Ä–∏–≤–µ—Ç, {0}" —Ü–∏—Ñ—Ä—ã –≤–∏–¥–∞ {num} –Ω–∞ values[num]
  return translated.replace(/\{(\d)\}/g, (s, num) => values[num]);
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
let name = "–í–∞—Å—è";

// –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É
console.log( i18n`Hello, ${name}!` ); // –ü—Ä–∏–≤–µ—Ç, –í–∞—Å—è!


var txt = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
var sln = txt.length;
console.log(sln); //26
var str = "My\n"; // 3 —Å–∏–º–≤–æ–ª–∞. –¢—Ä–µ—Ç–∏–π - –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏
console.log( str.length ); // 3


var str = "Please locate where 'locate' occurs!";
var pos = str.indexOf("locate");
console.log(pos); //7
var str = "Widget with id";
console.log( str.indexOf("Widget") ); // 0, —Ç.–∫. "Widget" –Ω–∞–π–¥–µ–Ω –ø—Ä—è–º–æ –≤ –Ω–∞—á–∞–ª–µ str
console.log( str.indexOf("id") ); // 1, —Ç.–∫. "id" –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ 1
console.log( str.indexOf("widget") ); // -1, –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –ø–æ–∏—Å–∫ —É—á–∏—Ç—ã–≤–∞–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä
console.log(str.indexOf("id", 2)) // 12, –ø–æ–∏—Å–∫ –Ω–∞—á–∞—Ç —Å –ø–æ–∑–∏—Ü–∏–∏ 2
console.log( ~2 ); // -(2+1) = -3
console.log( ~1 ); // -(1+1) = -2
console.log( ~0 ); // -(0+1) = -1
console.log( ~-1 ); // -(-1+1) = 0
//~n ‚Äì –Ω–æ–ª—å —Ç–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ n == -1
/*–ø—Ä–æ–≤–µ—Ä–∫–∞ if ( ~str.indexOf(...) ) –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç indexOf –æ—Ç–ª–∏—á–µ–Ω –æ—Ç -1, 
—Ç.–µ. —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –µ—Å—Ç—å. */
var str = "Widget";
if (~str.indexOf("get")) {
  console.log( '—Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –µ—Å—Ç—å!' );
}
var str = "Please locate where 'locate' occurs!";
var pos = str.lastIndexOf("locate");
console.log(pos);  //21
var str = "Please locate where 'locate' occurs!";
var pos = str.lastIndexOf("locate", 15);
console.log(pos);   //7


var str = "–û—Å–ª–∏–∫ –ò–∞-–ò–∞ –ø–æ—Å–º–æ—Ç—Ä–µ–ª –Ω–∞ –≤–∏–∞–¥—É–∫"; // –∏—â–µ–º –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ
var target = "–ò–∞"; // —Ü–µ–ª—å –ø–æ–∏—Å–∫–∞

var pos = 0;
while (true) {
  var foundPos = str.indexOf(target, pos);
  if (foundPos == -1) break;
  console.log( foundPos ); // –Ω–∞—à–ª–∏ –Ω–∞ —ç—Ç–æ–π –ø–æ–∑–∏—Ü–∏–∏
  pos = foundPos + 1; // –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫ —Å–æ —Å–ª–µ–¥—É—é—â–µ–π
}
/*
6
9
*/

var str = "–û—Å–ª–∏–∫ –ò–∞-–ò–∞ –ø–æ—Å–º–æ—Ç—Ä–µ–ª –Ω–∞ –≤–∏–∞–¥—É–∫"; // –∏—â–µ–º –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ
var target = "–ò–∞"; // —Ü–µ–ª—å –ø–æ–∏—Å–∫–∞
var pos = -1;
while ((pos = str.indexOf(target, pos + 1)) != -1) {
  console.log( pos );
}
/*
6
9
*/

var str = "Please locate where 'locate' occurs!";
var pos = str.search("locate");
console.log(pos);  //7

var str = "Apple, Banana, Kiwi";
var res = str.slice(7, 13);
console.log(res);  //Banana

var str = "Apple, Banana, Kiwi";
var res = str.slice(-12, -6);
console.log(res);  //Banana

var str = "stringify";
console.log(str.slice(2)); // ringify, —Å–∏–º–≤–æ–ª—ã —Å –ø–æ–∑–∏—Ü–∏–∏ 2 –¥–æ –∫–æ–Ω—Ü–∞
var res = str.slice(-2);
console.log(res);  //fy


var str = "stringify";
console.log(str.substring(0,1)); // "s", —Å–∏–º–≤–æ–ª—ã —Å –ø–æ–∑–∏—Ü–∏–∏ 0 –ø–æ 1 –Ω–µ –≤–∫–ª—é—á–∞—è 1.

var str = "stringify";
str = str.substr(2,4); // ring, —Å–æ 2-–π –ø–æ–∑–∏—Ü–∏–∏ 4 —Å–∏–º–≤–æ–ª–∞
console.log(str)



str = "Please visit Microsoft and Microsoft!";
var n = str.replace("Microsoft", "W3Schools");
console.log(n); //Please visit W3Schools and Microsoft!

str = "Please visit Microsoft!";
var n = str.replace("MICROSOFT", "W3Schools");
console.log(n); //Please visit Microsoft!
str = "Please visit Microsoft!";
var n = str.replace(/MICROSOFT/i, "W3Schools");
console.log(n); //Please visit W3Schools!

str = "Please visit Microsoft and Microsoft!";
var n = str.replace(/Microsoft/g, "W3Schools");
console.log(n); //Please visit W3Schools and W3Schools!

var str = "       Hello World!        ";
console.log(str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ''));  //Hello World!



var text1 = "Hello World!";       // String
var text2 = text1.toUpperCase();  // text2 is text1 converted to upper
console.log(text2); //HELLO WORLD!
console.log("–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å" [0].toLowerCase()); // '–∏' 

var text = "Hello" + " " + "World!";
var text = "Hello".concat(" ", "World!");


var str = "jQuery";
console.log( str.charAt(0) ); // "j"
var str = "–Ø - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä!";
console.log( str[0] ); // "–Ø"
console.log ( "".charAt(0) ); // –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
console.log ( "" [0] ); // undefined


var str = "HELLO WORLD";
str.charCodeAt(0);         // returns 72
alert( String.fromCharCode(1072) ); // '–∞'



"–í–∞—Å—è" > "–í–∞–Ω—è" // true, —Ç.–∫. –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç, –∞ –ø–æ—Ç–æ–º '—Å' > '–Ω'
"–î–æ–º–∞" > "–î–æ" // true, —Ç.–∫. –Ω–∞—á–∞–ª–æ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, –Ω–æ –≤ 1-–π —Å—Ç—Ä–æ–∫–µ –±–æ–ª—å—à–µ —Å–∏–º–≤–æ–ª–æ–≤
alert( "2" > "14" ); // true, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∏, –∏ –¥–ª—è –ø–µ—Ä–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤–µ—Ä–Ω–æ "2" > "1"
/*–ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç ‚Äì –Ω–µ —Å—Ç—Ä–æ–∫–∞, —Ç–æ –¥—Ä—É–≥–æ–π –±—É–¥–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –∫ —á–∏—Å–ª—É*/
alert( 2 > "14" ); // false
console.log('8' == 8); //true



var str = "–Å–ª–∫–∏";
console.log( str.localeCompare("–Ø–±–ª–æ–Ω–∏") ); // -1



var txt = "a,b,c,d,e";   // String
txt.split(",");          // Split on commas
txt.split(" ");          // Split on spaces
txt.split("|");          // Split on pipe
var txt = "Hello";       // String
txt.split("");           // Split in characters



console.log("foo".repeat(3)); // foofoofoo



var str = "Hello world, welcome to the universe.";
var n = str.includes("world");
console.log(n);  //true
var str = "Hello world, welcome to the universe.";
var n = str.includes("world", 12);
console.log(n);  //false



var str = "Hello world, welcome to the universe.";
var n = str.startsWith("world", 6);
console.log(n);  //true
var str = "Hello world, welcome to the universe.";
var n = str.endsWith("world", 11);
console.log(n);  //true



