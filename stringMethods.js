var text = "–º–æ—è —Å—Ç—Ä–æ–∫–∞";

var anotherText = '–µ—â–µ —Å—Ç—Ä–æ–∫–∞';

let str = `–æ–±—Ä–∞—Ç–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏`;

console.log(`–º–æ—è
  –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è
  —Å—Ç—Ä–æ–∫–∞`);


  'use strict';
let apples = 2;
let oranges = 3;
console.log(`${apples} + ${oranges} = ${apples + oranges}`); // 2 + 3 = 5


console.log("Bytes = " + 'ùí≥'.length ); // Bytes = 2, MATHEMATICAL SCRIPT CAPITAL X
console.log("Bytes = " + 'üòÇ'.length ); // Bytes = 2, FACE WITH TEARS OF JOY

// –∫–∞–∫ –±—É–¥—Ç–æ –≤ —Å—Ç—Ä–æ–∫–µ –¥–≤–∞ —Ä–∞–∑–Ω—ã—Ö —Å–∏–º–≤–æ–ª–∞ (–Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –æ–¥–∏–Ω)
console.log( 'ùí≥'.charCodeAt(0) + ' ' + 'ùí≥'.charCodeAt(1) ); // 55349 56499
// –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª —Å "–¥–ª–∏–Ω–Ω—ã–º" (–±–æ–ª–µ–µ 2 –±–∞–π—Ç) unicode-–∫–æ–¥–æ–º
console.log( 'ùí≥'.codePointAt(0) ); // 119987


// –ü—Ä–∞–≤–∏–ª—å–Ω–æ
console.log( String.fromCodePoint(119987) ); // ùí≥
// –ù–µ–≤–µ—Ä–Ω–æ!
console.log( String.fromCharCode(119987) ); // Ìí≥

console.log( "\u2033" ); // ‚Ä≥, —Å–∏–º–≤–æ–ª –¥–≤–æ–π–Ω–æ–≥–æ —à—Ç—Ä–∏—Ö–∞
console.log( "\u20331" ); // –î–≤–∞ —Å–∏–º–≤–æ–ª–∞: —Å–∏–º–≤–æ–ª –¥–≤–æ–π–Ω–æ–≥–æ —à—Ç—Ä–∏—Ö–∞ ‚Ä≥, –∞ –∑–∞—Ç–µ–º 1
console.log( "\u{20331}" ); // †å±, –∫–∏—Ç–∞–π—Å–∫–∏–π –∏–µ—Ä–æ–≥–ª–∏—Ñ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º

var str = "I'm a JavaScript \"programmer\" ";
console.log( str ); // I'm a JavaScript "programmer"
var str = ' —Å–∏–º–≤–æ–ª \\ ';
console.log( str ); // —Å–∏–º–≤–æ–ª \
console.log( "\a" ); // a
// –∏–¥–µ–Ω—Ç–∏—á–Ω–æ alert(  "a"  );


'use strict';

function f(strings, ...values) {
    console.log(JSON.stringify(strings));     // ["Sum of "," + "," =\n ","!"]
    console.log(JSON.stringify(strings.raw)); // ["Sum of "," + "," =\\n ","!"]
    console.log(JSON.stringify(values));      // [3,5,8]
}
let apples = 3;
let oranges = 5;
//          |  s[0] | v[0] |s[1]| v[1]  |s[2]  |      v[2]      |s[3]
let str = f`Sum of ${apples} + ${oranges} =\n ${apples + oranges}!`;

'use strict';

// str –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
function str(strings, ...values) {
  let str = "";
  for(let i=0; i<values.length; i++) {
    str += strings[i];
    str += values[i];
  }

  // –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫—É—Å–æ–∫ —Å—Ç—Ä–æ–∫–∏
  str += strings[strings.length-1];
  return str;
}

let apples = 3;
let oranges = 5;

// Sum of 3 + 5 = 8!
console.log( str`Sum of ${apples} + ${oranges} = ${apples + oranges}!`);


'use strict';

let messages = {
  "Hello, {0}!": "–ü—Ä–∏–≤–µ—Ç, {0}!"
};

function i18n(strings, ...values) {
  // –ü–æ —Ñ–æ—Ä–º–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ–ª—É—á–∏–º —à–∞–±–ª–æ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ messages
  // –ù–∞ –º–µ—Å—Ç–µ –∫–∞–∂–¥–æ–≥–æ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π –±—É–¥–µ—Ç –µ–≥–æ –Ω–æ–º–µ—Ä: {0}, {1}, ‚Ä¶
  let pattern = "";
  for(let i=0; i<values.length; i++) {
    pattern += strings[i] + '{' + i + '}';
  }
  pattern += strings[strings.length-1];
  // –¢–µ–ø–µ—Ä—å pattern = "Hello, {0}!"

  let translated = messages[pattern]; // "–ü—Ä–∏–≤–µ—Ç, {0}!"

  // –ó–∞–º–µ–Ω–∏—Ç –≤ "–ü—Ä–∏–≤–µ—Ç, {0}" —Ü–∏—Ñ—Ä—ã –≤–∏–¥–∞ {num} –Ω–∞ values[num]
  return translated.replace(/\{(\d)\}/g, (s, num) => values[num]);
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
let name = "–í–∞—Å—è";

// –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É
console.log( i18n`Hello, ${name}!` ); // –ü—Ä–∏–≤–µ—Ç, –í–∞—Å—è!




console.log("foo".repeat(3)); // foofoofoo